<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.myscloud.open.apollo.console.mapper.EnvironmentMapper">
  <resultMap id="BaseResultMap" type="net.myscloud.open.apollo.domain.model.Environment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="enable" jdbcType="BIT" property="enable" />
    <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="creator" jdbcType="INTEGER" property="creator" />
    <result column="modification_time" jdbcType="TIMESTAMP" property="modificationTime" />
    <result column="modifier" jdbcType="INTEGER" property="modifier" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, `name`, `desc`, `enable`, creation_time, creator,
    modification_time, modifier, memo
  </sql>
  <select id="get" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_environment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from tb_environment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="net.myscloud.open.apollo.domain.model.Environment">
    insert into tb_environment (id, code, `name`,
    `desc`, `enable`, creation_time,
    creator, modification_time, modifier,
    memo)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
    #{desc,jdbcType=VARCHAR}, #{enable,jdbcType=BIT}, #{creationTime,jdbcType=TIMESTAMP},
    #{creator,jdbcType=INTEGER}, #{modificationTime,jdbcType=TIMESTAMP}, #{modifier,jdbcType=INTEGER},
    #{memo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.myscloud.open.apollo.domain.model.Environment">
    insert into tb_environment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="enable != null">
        `enable`,
      </if>
      <if test="creationTime != null">
        creation_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="modificationTime != null">
        modification_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="modificationTime != null">
        #{modificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateSelective" parameterType="net.myscloud.open.apollo.domain.model.Environment">
    update tb_environment
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        `enable` = #{enable,jdbcType=BIT},
      </if>
      <if test="creationTime != null">
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="modificationTime != null">
        modification_time = #{modificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=INTEGER},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="update" parameterType="net.myscloud.open.apollo.domain.model.Environment">
    update tb_environment
    set code = #{code,jdbcType=VARCHAR},
    `name` = #{name,jdbcType=VARCHAR},
    `desc` = #{desc,jdbcType=VARCHAR},
    `enable` = #{enable,jdbcType=BIT},
    creation_time = #{creationTime,jdbcType=TIMESTAMP},
    creator = #{creator,jdbcType=INTEGER},
    modification_time = #{modificationTime,jdbcType=TIMESTAMP},
    modifier = #{modifier,jdbcType=INTEGER},
    memo = #{memo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <sql id="Page_Condition_SQL">
    <where>
      <if test="code != null">
        and locate(#{code}, `code`) > 0
      </if>
      <if test="name != null">
        and locate(#{name}, `name`) > 0
      </if>
      <if test="enable != null">
        and `enable` = #{enable}
      </if>
    </where>
  </sql>

  <select id="count" parameterType="net.myscloud.open.apollo.console.search.EnvironmentSearch" resultType="java.lang.Long">
    select count(1)
    from tb_environment
    <include refid="Page_Condition_SQL" />
  </select>

  <select id="page" parameterType="net.myscloud.open.apollo.console.search.EnvironmentSearch" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_environment
    <include refid="Page_Condition_SQL" />
    order by ${sort} ${order}
    limit #{offset},#{limit};
  </select>

  <select id="all" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_environment
  </select>
</mapper>